SELECT o.id,
      CASE WHEN o.standard_qty = 0 OR o.standard_qty IS NULL THEN 0
            ELSE o.standard_amt_usd / o.standard_qty END AS unit_price
  FROM orders o
  LIMIT 10;


SELECT o.id order_id,
      a.id account_id,
      o.total_amt_usd order_total_amt,
      CASE WHEN o.total_amt_usd >= 3000 THEN 'Large'
            WHEN o.total_amt_usd < 3000 THEN 'Small' END AS order_level
  FROM accounts a
  JOIN orders o
    ON a.id = o.account_id;


SELECT CASE WHEN o.total >= 2000 THEN 'At Least 2000'
            WHEN o.total >= 1000 AND o.total < 2000 THEN 'Between 1000 and 2000'
            ELSE 'Less Than 1000' END AS orders_numbers_categorized,
      COUNT(o.total)
  FROM orders o
  GROUP BY 1;


SELECT a.name account_name,
      SUM(o.total_amt_usd) total_sales_orders_usd,
      CASE WHEN SUM(o.total_amt_usd) > 200000 THEN 'Top'
            When SUM(o.total_amt_usd) >= 100000 AND SUM(o.total_amt_usd) <= 200000 THEN 'Middle'
            ELSE 'Low' END AS customers_levels
  FROM orders o
  JOIN accounts a
    ON a.id = o.account_id
  GROUP BY 1
  ORDER BY 2 DESC;


SELECT a.name account_name,
      SUM(o.total_amt_usd) total_sales_orders_usd,
      CASE WHEN SUM(o.total_amt_usd) > 200000 THEN 'Top'
            When SUM(o.total_amt_usd) >= 100000 AND SUM(o.total_amt_usd) <= 200000 THEN 'Middle'
            ELSE 'Low' END AS customers_levels
  FROM orders o
  JOIN accounts a
    ON a.id = o.account_id
  WHERE DATE_PART('year', o.occurred_at) = '2016' OR DATE_PART('year', o.occurred_at) = '2017'
  GROUP BY 1
  ORDER BY 2 DESC;



SELECT s.name sales_rep_name,
      COUNT(o.total) AS total_number_orders,
      CASE WHEN COUNT(o.total) > 200 THEN 'Top'
            ELSE 'Not' END AS is_top
  FROM sales_reps s
  JOIN accounts a
    ON s.id = a.sales_rep_id
  JOIN orders o
    ON a.id = o.account_id
  GROUP BY 1
  ORDER BY 2 DESC;



SELECT s.name sales_rep_name,
      COUNT(o.total) AS total_number_orders,
      SUM(o.total_amt_usd) AS total_usd_sales_rep,
      CASE WHEN COUNT(o.total) > 200 OR SUM(o.total_amt_usd) > 75000 THEN 'Top'
            WHEN COUNT(o.total) > 150 OR SUM(o.total_amt_usd) > 50000 THEN 'Middle'
            ELSE 'Not' END AS is_top
  FROM sales_reps s
  JOIN accounts a
    ON s.id = a.sales_rep_id
  JOIN orders o
    ON a.id = o.account_id
  GROUP BY 1
  ORDER BY 3 DESC;
